---------------a---------------
i = 0				| 2
	while i < n:	| 3 * (n + 1)
		k += 1      | 4 * n
		i += 1      | 4 * n

sum: 11n + 5

---------------b---------------
n = 2^m + b, b < 2^m; m = log2(n - b) = floor(log2(n)), log2(n) in [m, m + 1)

i = 1 			    | 2
	while i < n:    | 3 * (m + 1) = 3 * (ceil(log2(n)) + 1)
		i = i * 2   | 4 * m 	  = 4 * ceil(log2(n))

sum: 7 * ceil(log2(n)) + 5

---------------c---------------
n = 2 * m; m = n / 2
n = 2 * m + 1; m = (n - 1) / 2

i = 0					| 2
	while i < n:		| 3 * (n + 1)
		if i % 2 == 0:	| 5 * n
			k += 1 		| 4 * floor(n / 2)
		i += 1 			| 4 * n

sum: 12n + 4 * floor(n / 2) + 5

---------------d---------------
i = 0				| 2
while i < n:		| 3 * (n + 1)
	j = n 			| 2 * n
	while j > 0:	| 3 * n * (n + 1)
		k += 1 		| 4 * n * n
		j -= 1 		| 4 * n * n
	i += 1 			| 4 * n

sum: 11n^2 + 9n + 5

---------------e---------------
i = 0				| 2
while i < n: 		| 3 * (n + 1)
	j = i 			| 2 * n
	while j < n: 	| 3 * ((n + 1) + n + (n - 1) + ... + 2) = 3 * (n + n * (n + 1) / 2)
		k += 1 	 	| 4 * (n + (n - 1) + ... + 1) = 4 * n * (n + 1) / 2
		j += 1 		| 4 * (n + (n - 1) + ... + 1) = 4 * n * (n + 1) / 2
	i += 1 			| 4 * n

sum: 11 * n * (n + 1) / 2 + 12 * n + 5

---------------f---------------
n = 3^m + b; m = log3(n - b) = floor(log3(n))

i = 0 				| 2
while i < n: 		| 3 * (n + 1)
	j = n 			| 2 * n
	while j != 0: 	| 3 * n * (m + 2) = 3 * n * (floor(log3(n)) + 2)
		k += 1 		| 4 * n * (m + 1) = 4 * n * (floor(log3(n)) + 1)
		j //= 3 	| 4 * n * (m + 1) = 4 * n * (floor(log3(n)) + 1)
	i += 1 			| 4 * n

sum: 11 * n * floor(log3(n)) + 23 * n + 5
