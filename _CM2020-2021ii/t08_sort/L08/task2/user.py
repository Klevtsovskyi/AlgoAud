"""
Реалізуйте швидкий алгоритм сортування QuickSort.
"""

N = 1000000  # Кількість елементів масиву.
             # Використовується у головній програмі для генерування масиву з випадкових чисел
             # Для повільних алгоритмів сортування з асимптотикою n**2 рекомендується
             # використовувати значення не більше 10к
             # Для швидких алгоритмів сортування з асимптотикою
             # nlog(n) встановіть значення 1 000 000


def sort(array):
    """ Сортування масиву
    :param array: Вхідний масив даних, що треба відсортувати.
    """

    def _sort(a, b):
        if a >= b:
            return

        pivot = array[a + (b - a) // 2]
        l = a
        r = b
        while True:
            while array[l] < pivot:
                l += 1
            while array[r] > pivot:
                r -= 1

            if l >= r:
                break

            array[l], array[r] = array[r], array[l]
            l += 1
            r -= 1

        _sort(a, r)
        _sort(r + 1, b)

    _sort(0, len(array) - 1)


if __name__ == '__main__':
    arr = [23, 24, 10, 9, 8, 45, 42, 90, 85, 1, 5, 6]
    sort(arr)
    # 8
