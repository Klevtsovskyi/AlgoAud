
"""
Модифікуйте алгоритм бульбашкового сортування,
перевіркою на кожному проході чи відсортований вже масив.
Порівняйте час виконання обох програм.
"""

N = 5000     # Кількість елементів масиву.
             # Використовується у головній програмі для генерування масиву з випадкових чисел
             # Для повільних алгоритмів сортування з асимптотикою n**2 рекомендується
             # використовувати значення не більше 10к
             # Для швидких алгоритмів сортування з асимптотикою
             # nlog(n) встановіть значення 1 000 000


def sort(array):
    """ Сортування масиву
    :param array: Вхідний масив даних, що треба відсортувати.
    """
    n = len(array)
    for j in range(n - 1, 0, -1):
        _sorted = True
        for i in range(j):
            if array[i] > array[i + 1]:
                array[i], array[i + 1] = array[i + 1], array[i]
                _sorted = False
        # print(array)
        if _sorted:
            return


if __name__ == '__main__':
    arr = [9, 1, -1, 20, 19, 10, -5, 13, 7]
    print(arr)
    sort(arr)
