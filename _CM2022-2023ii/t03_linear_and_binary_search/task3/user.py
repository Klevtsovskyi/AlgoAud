"""
Реалізуйте алгоритм пошуку номеру найпершого входження до заданого масиву, заданого числа x.
Якщо заданий елемент відсутній у списку - поверніть номер першого елементу, що більший за число x:
                            array[i] >= x
"""


def bsearch_leftmost(array, x):
    """ Бінарний пошук для відшукання найпершого входження заданого числа

    :param array: Відсортований за неспаданням масив цілих чисел
    :param x:     Шукане число
    :return:      Номер шуканого елемента у масиві
    """
    l = 0
    r = len(array)
    while l < r:
        m = l + (r - l) // 2
        # print(f"l={l}; r={r}; m={m}; array[m]={array[m]}")
        if array[m] < x:
            l = m + 1
        else:
            r = m

    # print(l, r)
    return l


if __name__ == "__main__":
    a = [0, 1, 1, 4, 5, 5, 5, 7, 9, 9, 10, 11, 13, 13, 16]
    x = 18
    i = bsearch_leftmost(a, x)
    print(i)
